{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/actionsType.js","components/ContactList/ContactList.js","redux/reduxActions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","redux/rootReducer.js","redux/redux.js","index.js"],"names":["module","exports","connect","state","items","filter","dispatch","onRemove","id","type","actionsType","payload","actionRemoveContact","length","filterInput","contact","name","toLowerCase","includes","getVisibleContacts","map","phone","onClick","className","style","button__delete","onAdd","newContact","actionAddContact","useState","setName","setPhone","handleChangeForm","target","value","console","log","validateFrom","isExistContact","find","alert","handleCheckUniqueContact","toast","onSubmit","e","preventDefault","uuidv4","placeholder","onChange","handleFilterChange","valueInput","input__filter","App","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.069fe6e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button__delete\":\"ContactList_button__delete__12_sR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input__filter\":\"Filter_input__filter__29T8e\"};","export default {\n  ADD: 'ADD_CONTACTS',\n  DELETE: 'DELETE_CONTACTS',\n  FILTER: 'SET_FILTER',\n};\n","import style from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport { actionRemoveContact } from '../../redux/reduxActions';\n\nconst ContactList = ({ items, filter, onRemove }) => {\n  const getVisibleContacts = (items, filterInput) => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filterInput.toLowerCase()),\n    );\n  };\n\n  if (items.length === 0) return null;\n\n  return (\n    <ul>\n      {getVisibleContacts(items, filter).map(({ id, name, phone }) => {\n        return (\n          <li key={id}>\n            {name} : {phone}\n            <button\n              onClick={() => {\n                onRemove(id);\n              }}\n              className={style.button__delete}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nconst mapStateToProps = state => ({\n  items: state.items,\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => dispatch(actionRemoveContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import actionsType from './actionsType';\nconst actionAddContact = newContact => ({\n  type: actionsType.ADD,\n  payload: newContact,\n});\n\nconst actionRemoveContact = id => ({\n  type: actionsType.DELETE,\n  payload: id,\n});\n\nconst actionSetFilter = filter => ({\n  type: actionsType.FILTER,\n  payload: filter,\n});\nexport { actionAddContact, actionRemoveContact, actionSetFilter };\n","import style from './ContactForm.module.css';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { actionAddContact } from '../../redux/reduxActions';\n\nfunction ContactForm({ items, onAdd }) {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        console.log('Sorry, we are not have ' + name + '.');\n    }\n  };\n  const handleCheckUniqueContact = (items, name) => {\n    const isExistContact = !!items.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exist');\n\n    return !isExistContact;\n  };\n\n  const validateFrom = () => {\n    if (!name || !phone) {\n      toast('Some filed is empty');\n      return false;\n    }\n\n    return handleCheckUniqueContact(items, name);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const handleFromSubmit = e => {\n    e.preventDefault();\n    const isValidForm = validateFrom();\n\n    if (!isValidForm) return;\n\n    const newContact = { id: uuidv4(), name, phone };\n\n    onAdd(newContact);\n    resetForm();\n  };\n\n  return (\n    <form onSubmit={handleFromSubmit}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleChangeForm}\n      ></input>\n      <input\n        type=\"tel\"\n        name=\"phone\"\n        placeholder=\"Enter phone number\"\n        value={phone}\n        onChange={handleChangeForm}\n      ></input>\n      <button type=\"submit\">Add Contact</button>\n    </form>\n  );\n}\nconst mapStateToProps = state => ({\n  items: state.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAdd: newContact => dispatch(actionAddContact(newContact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import style from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { actionSetFilter } from '../../redux/reduxActions';\n\nconst Filter = ({ filter, handleFilterChange }) => {\n  return (\n    <input\n      className={style.input__filter}\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => handleFilterChange(target.value)}\n      placeholder=\"Enter name for Search\"\n    />\n  );\n};\nconst mapStateToProps = state => ({\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleFilterChange: valueInput => dispatch(actionSetFilter(valueInput)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport ContactList from './components/ContactList/ContactList.js';\nimport ContactForm from './components/ContactForm/ContactForm.js';\nimport Filter from './components/Filter/Filter.js';\nimport style from './App.module.css';\n\nfunction App() {\n  return (\n    <>\n      <h2>From Contact</h2>\n      <ContactForm />\n      <h2>Contacts list</h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer></ToastContainer>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport actionsType from './actionsType';\n\nfunction reducerContacts(state = [], { type, payload }) {\n  switch (type) {\n    case actionsType.ADD:\n      return [...state, payload];\n\n    case actionsType.DELETE:\n      return [...state.filter(contact => contact.id !== payload)];\n\n    default:\n      return state;\n  }\n}\nfunction reducerFilter(state = '', { type, payload }) {\n  if (actionsType.FILTER === type) {\n    return payload;\n  }\n  return state;\n}\nexport const rootReducer = combineReducers({\n  items: reducerContacts,\n  filter: reducerFilter,\n});\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './rootReducer';\n\nexport const store = createStore(rootReducer, composeWithDevTools());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/redux';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}